% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/htbGetRas.R
\name{htbGetRas}
\alias{htbGetRas}
\title{Creator for htbRas object}
\usage{
htbGetRas(
  db_data,
  db_event,
  alignment,
  incld = NULL,
  excld = NULL,
  cond = all,
  ch = NULL,
  event = NULL,
  title = NULL
)
}
\arguments{
\item{db_data}{An \code{htbDb} object of \code{spike} or \code{analog} type
that contains the data you want to align.}

\item{db_event}{An \code{htbDb} object of \code{event} type
used to align the data.}

\item{alignment}{A named list.
Each element of the list must be a vector of length two,
that designate the range of the extracted data
around the time of aligning event in standard xlim style in R,
i.e., \code{c(from, to)}.
The name of the list is used as the name of the events to look at
for the alignment.}

\item{incld}{A named list.
The task event(s) needed to exist within an arbitrary range
from the aligning event (designated by \code{alignment} argument).
Format is the same to that of \code{alignment},
i.e., all the elements must be vectors of length two
indicating \code{from} and \code{to} of the temporal range,
and the name of the list corresponds to the events to be checked.
This argument can be a list of such named lists,
in which case they are used separately used for each element
of \code{alignment}.}

\item{excld}{A named list.
Same to \code{incld} but for task event(s) that \emph{must not} exist
within the range from aligning event.}

\item{cond}{A function.
Conditional function (either \code{\link[=all]{all()}} or \code{\link[=any]{any()}}) used
in in/exclusion process.
When \code{\link[=all]{all()}} is used, a period of data is accepted
and incorporated into resulting \code{htbRas} object
if all the in/exclusion criteria designated by \code{incld} and \code{excld}
are fulfilled.
When \code{\link[=any]{any()}} is used, a period of data is appended
if any one or more criteria of \code{incld} and \code{excld} are fulfilled.}

\item{ch}{Integer(s). The channel(s) of \code{db_data} to extract.
When multiple channels are designated, \code{\link[=htbGetRas]{htbGetRas()}}
returns a list of \code{htbRas} objects (instead of an \code{htbRas} object)
as a result of data extraction for each channel of the \code{htbDb} object
with the same extraction settings.}

\item{event}{Strings.
The names of task events you want to include in returning \code{htbRas} object.
The timing information of these events can be then used
in further visualization and analysis
(e.g., plotting the event when you draw a rastergram).}

\item{title}{Strings.
The titles for the extraction whose length
equals to that of \code{alignment}.}
}
\value{
An \code{htbRas} object.
}
\description{
Creates htbRas object from htbDb objects.
}
\details{
In order to assess the function of recorded neural activity,
you need to examine the relationship between neuron's firing
and other experimental factors such as task events.
For example, some neurons may be activated at the time
of visual cue presentation, while others may fire
when the response is made.
For this analysis, your first step will be aligning
the neural activity by the occurrence of
a given task event.
In other words, you need to collect the activity of
the neuron around the onset of the targeted task event
for multiple times,
then you can create a rastergram or histogram for visually
assess the event-related activity of the neuron.

\code{\link[=htbGetRas]{htbGetRas()}} performs this data alignment process
for a given \code{htbDb} object.
A pair of htbDb objects with \code{spike} and \code{event} types
are used to create an aligned activity
packed into a dedicated list variable called \code{htbRas} object.
You can also use an \code{htbDb} object of \code{analog} type
when you want to align continuous data
(e.g., local field potential, electromyography, eye trajectory)
instead of intermittent spike timing data.
In either case, the \code{spike/analog} database and \code{event} database
must have been recorded in the same session
with completely identical storing configuration.
Otherwise, resulting \emph{alignment} of the data does not make sense
since \code{\link[=htbGetRas]{htbGetRas()}} has no capability in detecting
temporal offset or mismatch between provided databases.
}
\examples{
  alignment <- list(CUEON_L = c(-1500, 2000), CUEON_R = c(-1500, 2000))
  incld <- list(TRIALSTART = c(-2000, 0), TRIALEND = c(0, 2000))
  excld <- list(ERROR = c(0, 2000))
  
  \dontrun{
  db_sp <- htbGetDb("spike.htb")
  db_ev <- htbGetDb("event.htb")
  ras <- htbGetRas(db_sp, db_ev, alignment,
    incld = incld, excld = excld)
  }

}
\keyword{utilities}
